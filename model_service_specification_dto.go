/*
 * AVACloud API 1.16.0
 *
 * AVACloud API specification
 *
 * API version: 1.16.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package avaclient

import (
	"time"
)

// ServiceSpecificationDto This is the base class that holds information about a whole service specification.
type ServiceSpecificationDto struct {
	// Elements GUID identifier.
	Id string `json:"id"`
	// The hourly wage that is used within this ElementContainerBase. Will be propagated to child elements.
	ProjectHourlyWage float32 `json:"projectHourlyWage"`
	// The tax rate that is used within this ElementContainerBase. Will be propagated to child elements.
	ProjectTaxRate float32 `json:"projectTaxRate"`
	// The price components that are used within this project. They are ignored during Json deserialization because they will be set from the parent project.
	ProjectPriceComponents  []string            `json:"projectPriceComponents,omitempty"`
	ProjectItemNumberSchema ItemNumberSchemaDto `json:"projectItemNumberSchema,omitempty"`
	// The IElements within this ElementContainerBase.
	Elements []IElementDtoHolder `json:"elements,omitempty"`
	// The label used in the parent Project to mark labour time, e.g. \"Hours\" or \"Stunden\".
	ProjectLabourTimeLabel string `json:"projectLabourTimeLabel,omitempty"`
	// Indicates if there are child IElements that have conflicting, duplicated ItemNumbers or if any child ElementContainerBase elements themselves contain duplicate ItemNumber s. Will always indicate false when told to ignore duplicate item numbers.
	ContainsDuplicateItemNumbers bool `json:"containsDuplicateItemNumbers"`
	// Indicates if there are child IElements that have conflicting, duplicated Ids or if any child ElementContainerBase elements themselves contain duplicate Id s. Will always indicate false when told to ignore duplicate item numbers.
	ContainsDuplicateElementIds bool `json:"containsDuplicateElementIds"`
	// Indicate if duplicated ItemNumbers within child elements are to be ignored. Will not perform checks for duplicates if yes.
	IgnoreDuplicateItemNumbers bool `json:"ignoreDuplicateItemNumbers"`
	// Indicate if duplicated Ids within child elements are to be ignored. Will not perform checks for duplicates if yes.
	IgnoreDuplicateElementIds bool `json:"ignoreDuplicateElementIds"`
	// Price composition by tax rate.
	TotalPriceGrossByTaxRate []GrossPriceComponentDto `json:"totalPriceGrossByTaxRate,omitempty"`
	// Internally used to indicate that a propagation is currently done, this is done to not recalculate every single result from a lot of changes when it is sufficient to calculate the total price at once.
	IgnoreChildPriceUpdates bool `json:"ignoreChildPriceUpdates"`
	// Net price after applied deductions.
	DeductedPrice float32 `json:"deductedPrice"`
	// Factor of applied deductions to the total price. For example, \"0.03\" means that a 3% deduction is to be applied.
	DeductionFactor float32 `json:"deductionFactor"`
	// Will return this ElementContainerBase's total price.
	TotalPrice float32 `json:"totalPrice"`
	// The total gross price for this ElementContainerBase including all child elements.
	TotalPriceGross float32 `json:"totalPriceGross"`
	// Total gross price after applied deductions.
	TotalPriceGrossDeducted float32             `json:"totalPriceGrossDeducted"`
	PriceType               PriceTypeDto        `json:"priceType"`
	Bidder                  PartyInformationDto `json:"bidder,omitempty"`
	// This discriminator is used to identify different bidders in a project. It is different from the Identifier property in the Bidder in that the BidderDiscriminator is intended to be a numerical identifier within a project, while the Identifier does uniquely identify a bidder in the system independent of a specific project. This property should map to \"Bieternummer\" or \"BidderNo\" in GAEB.
	BidderDiscriminator string `json:"bidderDiscriminator,omitempty"`
	// This is used to store the GAEB XML Id within this ServiceSpecification. This data is not used for any calculations or evaluations but only for GAEB serialization and deserialization.
	GaebXmlId          string                `json:"gaebXmlId,omitempty"`
	ProjectInformation ProjectInformationDto `json:"projectInformation,omitempty"`
	ExchangePhase      ExchangePhaseDto      `json:"exchangePhase"`
	Origin             OriginDto             `json:"origin"`
	// Creation date of this ServiceSpecification.
	CreationDate time.Time `json:"creationDate,omitempty"`
	// Date indicating until when an offer has to be submitted. In German, this is often called the \"Er√∂ffnungstermin\"
	OfferByDate time.Time `json:"offerByDate,omitempty"`
	// Date indicating by when the buyer will select a contractor.
	DecisionDate time.Time `json:"decisionDate,omitempty"`
	// String indicating where the physical submission of the offer is taking place.
	SubmissionLocation string `json:"submissionLocation,omitempty"`
	// Description of this ServiceSpecification.
	Description string `json:"description,omitempty"`
	// The name of this ServiceSpecification.
	Name             string              `json:"name,omitempty"`
	PriceInformation PriceInformationDto `json:"priceInformation,omitempty"`
	// These are Catalogue that are used within this ElementContainerBase. Catalogue references are used to describe catalogues, or collections, that can be used to describe elements with commonly known properties. For example, QuantityAssignments use these to categorize themselves.
	ProjectCatalogues []CatalogueDto `json:"projectCatalogues,omitempty"`
	// Referenced catalogues for this QuantityAssignment.
	CatalogueReferences []CatalogueReferenceDto `json:"catalogueReferences,omitempty"`
	// The date when the execution of the services is scheduled to start
	PlannedExecutionStart time.Time `json:"plannedExecutionStart,omitempty"`
	// The date then the execution of the services is scheduled to be finished
	PlannedExecutionEnd time.Time `json:"plannedExecutionEnd,omitempty"`
	// The date on which the contract has been awarded. This matches \"Auftragsdatum\" in GAEB
	ContractDate time.Time `json:"contractDate,omitempty"`
	// This value can be used to indicate the number or identifier of the contract. It matches \"Auftragsnummer\" in GAEB
	ContractIdentifier string              `json:"contractIdentifier,omitempty"`
	WarrantyDuration   WarrantyDurationDto `json:"warrantyDuration,omitempty"`
	// The date on which the warranty period ends
	WarrantyEnd time.Time `json:"warrantyEnd,omitempty"`
	// The date on which the services rendered by the bidder are scheduled to be approved by the buyer
	ApprovalDate time.Time `json:"approvalDate,omitempty"`
	// This should specify how the approval is performed by the buyer. This matches \"AcceptType\" in GAEB
	TypeOfApproval string `json:"typeOfApproval,omitempty"`
}
