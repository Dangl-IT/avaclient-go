/*
 * AVACloud API 1.16.0
 *
 * AVACloud API specification
 *
 * API version: 1.16.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package avaclient

// ServiceSpecificationGroupDto struct for ServiceSpecificationGroupDto
type ServiceSpecificationGroupDto struct {
	// Elements GUID identifier.
	Id string `json:"id"`
	// This is used to store the GAEB XML Id within this IElement. This data is not used for any calculations or evaluations but only for GAEB serialization and deserialization.
	GaebXmlId                string `json:"gaebXmlId,omitempty"`
	ElementTypeDiscriminator string `json:"elementTypeDiscriminator"`
	// The hourly wage that is used within this ElementContainerBase. Will be propagated to child elements.
	ProjectHourlyWage float32 `json:"projectHourlyWage"`
	// The tax rate that is used within this ElementContainerBase. Will be propagated to child elements.
	ProjectTaxRate float32 `json:"projectTaxRate"`
	// The price components that are used within this project. They are ignored during Json deserialization because they will be set from the parent project.
	ProjectPriceComponents  []string            `json:"projectPriceComponents,omitempty"`
	ProjectItemNumberSchema ItemNumberSchemaDto `json:"projectItemNumberSchema,omitempty"`
	// The IElements within this ElementContainerBase.
	Elements []IElementDtoHolder `json:"elements,omitempty"`
	// The label used in the parent Project to mark labour time, e.g. \"Hours\" or \"Stunden\".
	ProjectLabourTimeLabel string `json:"projectLabourTimeLabel,omitempty"`
	// Indicates if there are child IElements that have conflicting, duplicated ItemNumbers or if any child ElementContainerBase elements themselves contain duplicate ItemNumber s. Will always indicate false when told to ignore duplicate item numbers.
	ContainsDuplicateItemNumbers bool `json:"containsDuplicateItemNumbers"`
	// Indicates if there are child IElements that have conflicting, duplicated Ids or if any child ElementContainerBase elements themselves contain duplicate Id s. Will always indicate false when told to ignore duplicate item numbers.
	ContainsDuplicateElementIds bool `json:"containsDuplicateElementIds"`
	// Indicate if duplicated ItemNumbers within child elements are to be ignored. Will not perform checks for duplicates if yes.
	IgnoreDuplicateItemNumbers bool `json:"ignoreDuplicateItemNumbers"`
	// Indicate if duplicated Ids within child elements are to be ignored. Will not perform checks for duplicates if yes.
	IgnoreDuplicateElementIds bool `json:"ignoreDuplicateElementIds"`
	// Price composition by tax rate.
	TotalPriceGrossByTaxRate []GrossPriceComponentDto `json:"totalPriceGrossByTaxRate,omitempty"`
	// Internally used to indicate that a propagation is currently done, this is done to not recalculate every single result from a lot of changes when it is sufficient to calculate the total price at once.
	IgnoreChildPriceUpdates bool `json:"ignoreChildPriceUpdates"`
	// Net price after applied deductions.
	DeductedPrice float32 `json:"deductedPrice"`
	// Factor of applied deductions to the total price. For example, \"0.03\" means that a 3% deduction is to be applied.
	DeductionFactor float32 `json:"deductionFactor"`
	// Will return this ElementContainerBase's total price.
	TotalPrice float32 `json:"totalPrice"`
	// The total gross price for this ElementContainerBase including all child elements.
	TotalPriceGross float32 `json:"totalPriceGross"`
	// Total gross price after applied deductions.
	TotalPriceGrossDeducted float32      `json:"totalPriceGrossDeducted"`
	PriceType               PriceTypeDto `json:"priceType"`
	// Description for this ServiceSpecificationGroup.
	ShortText       string             `json:"shortText,omitempty"`
	ComissionStatus ComissionStatusDto `json:"comissionStatus"`
	ItemNumber      ItemNumberDto      `json:"itemNumber,omitempty"`
	ElementType     string             `json:"elementType,omitempty"`
	// This indicates if this group is the parent of a lot. See the documentation for more information about working with lots.
	IsLot bool `json:"isLot"`
	// If this group is an alternative for a base group, then this property should point to the id of the group in this service specification that it can replace. If this is an alternative group to a base group, the PriceType should typically be set to \"WithoutTotal\" so this group does not factor into total costs. The PriceType is not changed when this property is set
	AlternativeTo string `json:"alternativeTo,omitempty"`
	Type          string `json:"type,omitempty"`
	// These are Catalogue that are used within this ElementContainerBase. Catalogue references are used to describe catalogues, or collections, that can be used to describe elements with commonly known properties. For example, QuantityAssignments use these to categorize themselves.
	ProjectCatalogues []CatalogueDto `json:"projectCatalogues,omitempty"`
	// Referenced catalogues for this QuantityAssignment.
	CatalogueReferences []CatalogueReferenceDto `json:"catalogueReferences,omitempty"`
}
